思路：
0.搭建整体Maven模块架构，并且同步Git版本控制管理工具
1.搭建mybatis+spring环境（测试）
2.搭建日志、spring、springMVC等模块
3.搭建Dubbo环境（测试）

1.前台用户注册逻辑
    ①:输入账号信息，邮箱激活
    ②:激活码(使用创建时间和用户名进行MD5加密)


******************友爱空间URL设计Begin**************************
前台:
*默认：
/login
*登录、注册页面:/login
*首页:         /{id}/main
与我相关:     /{id}/atme
              评论回复、点赞收藏、浏览
日志：        /{id}/log
相册：        /{id}/alblum
设置：        /{id}/setting
*他人主页:
首页:         /{id}/main
与我相关:     /{id}/atme
日志：        /{id}/log
相册：        /{id}/alblum
设置：        /{id}/setting
*后台：
管理员登陆页面:/admin/login  或者/admin/login.html
管理员首页：/admin/index/{id}
******************友爱空间URL设计End**************************

******************友爱空间设计亮点Begin**************************
1.用户登录系统后获取Token，只要获取到Token的用户才能够进行数据访问
2.用户访问他人主页的时候，需要拦截器进行拦截，拦截器功能职责是验证
是否为好友关系
3.拦截器：
    ①：登陆拦截器：拦截除了登陆界面意外的所有页面。若Cookie中有
        yooai_uid和yooai_token，那么就自动登陆
    ②：好友拦截器：如果好友访问的时候不在好友列表，那么将无权限访
        问，可以申请访问。
4.后台使用shrio权限验证框架
    思路：登陆时候，用户名密码正确后；后台数据库获取用户角色，然后
    从角色中获取功能权限。进入后台管理系统时候，与此同时加载权限菜单
    ，之后用户只能在权限菜单中进行操作。
5.发表说说时候，使用ueditor进行上传图片、声音、视频
6.存放在redis中的数据：
    ①：好友关系
        friends
            user:103
                    friend{user1,user2,user3}

    ②：收藏
        collections
            collector:103
                says{say1,say2,say3}
******************友爱空间设计亮点Begin**************************